"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("mz/fs");
const pFilter = require("p-filter");
const path = require("path");
async function binify(pkg, pkgPath) {
    if (pkg.bin) {
        return commandsFromBin(pkg.bin, pkg.name, pkgPath);
    }
    if (pkg.directories && pkg.directories.bin) {
        const binDir = path.join(pkgPath, pkg.directories.bin);
        const files = await findFiles(binDir);
        return pFilter(files.map((file) => ({
            name: file,
            path: path.join(binDir, file),
        })), async (cmd) => (await fs.stat(cmd.path)).isFile());
    }
    return [];
}
exports.default = binify;
async function findFiles(dir) {
    try {
        return await fs.readdir(dir);
    }
    catch (err) {
        if (err.code !== 'ENOENT') {
            throw err;
        }
        return [];
    }
}
function commandsFromBin(bin, pkgName, pkgPath) {
    if (typeof bin === 'string') {
        return [
            {
                name: pkgName,
                path: path.join(pkgPath, bin),
            },
        ];
    }
    return Object.keys(bin)
        .map((commandName) => ({
        name: commandName,
        path: path.join(pkgPath, bin[commandName]),
    }));
}
//# sourceMappingURL=index.js.map