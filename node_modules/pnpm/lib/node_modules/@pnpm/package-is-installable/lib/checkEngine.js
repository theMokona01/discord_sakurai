"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const semver = require("semver");
class UnsupportedEngineError extends Error {
    constructor(packageId, wanted, current) {
        super(`Unsupported engine for ${packageId}: wanted: ${JSON.stringify(wanted)} (current: ${JSON.stringify(current)})`);
        this.code = 'ERR_PNPM_UNSUPPORTED_ENGINE';
        this.wanted = wanted;
        this.current = current;
    }
}
function checkEngine(packageId, wantedEngine, currentEngine) {
    if (!wantedEngine)
        return null;
    if ((wantedEngine.node && !semver.satisfies(currentEngine.node, wantedEngine.node)) ||
        (wantedEngine.pnpm && !semver.satisfies(currentEngine.pnpm, wantedEngine.pnpm))) {
        return new UnsupportedEngineError(packageId, wantedEngine, currentEngine);
    }
    return null;
}
exports.default = checkEngine;
//# sourceMappingURL=checkEngine.js.map