{
  "_args": [
    [
      {
        "raw": "flat-colors@3.0.0",
        "scope": null,
        "escapedName": "flat-colors",
        "name": "flat-colors",
        "rawSpec": "3.0.0",
        "spec": "3.0.0",
        "type": "version"
      },
      "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/overlap/node_modules/couleurs"
    ]
  ],
  "_from": "flat-colors@3.0.0",
  "_id": "flat-colors@3.0.0",
  "_inCache": true,
  "_location": "/flat-colors",
  "_nodeVersion": "0.12.1",
  "_npmUser": {
    "name": "ionicabizau",
    "email": "bizauionica@gmail.com"
  },
  "_npmVersion": "2.7.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "flat-colors@3.0.0",
    "scope": null,
    "escapedName": "flat-colors",
    "name": "flat-colors",
    "rawSpec": "3.0.0",
    "spec": "3.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/overlap/couleurs"
  ],
  "_resolved": "https://registry.npmjs.org/flat-colors/-/flat-colors-3.0.0.tgz",
  "_shasum": "253ab1a23989c321f13b0acd4bf73fff4072ecb7",
  "_shrinkwrap": null,
  "_spec": "flat-colors@3.0.0",
  "_where": "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/overlap/node_modules/couleurs",
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com"
  },
  "blah": {
    "h_img": "http://i.imgur.com/S57IeyN.png"
  },
  "bugs": {
    "url": "https://github.com/IonicaBizau/node-flat-colors/issues"
  },
  "dependencies": {},
  "description": "Find the nearest flat color for a RGB/Hex input.",
  "devDependencies": {},
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "253ab1a23989c321f13b0acd4bf73fff4072ecb7",
    "tarball": "https://registry.npmjs.org/flat-colors/-/flat-colors-3.0.0.tgz"
  },
  "gitHead": "ae7c6b8e369fb44e9f39fdc58a8be886fa615201",
  "homepage": "https://github.com/IonicaBizau/node-flat-colors",
  "keywords": [
    "node",
    "flat",
    "ui",
    "colors"
  ],
  "license": "KINDLY",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ionicabizau",
      "email": "bizauionica@gmail.com"
    }
  ],
  "name": "flat-colors",
  "optionalDependencies": {},
  "readme": "<!---------------------------------------------------------------------------->\n<!-- STOP, LOOK & LISTEN!                                                   -->\n<!-- ====================                                                   -->\n<!-- Do NOT edit this file directly since it's generated from a template    -->\n<!-- file, using https://github.com/IonicaBizau/node-blah                   -->\n<!--                                                                        -->\n<!-- If you found a typo in documentation, fix it in the source files       -->\n<!-- (`lib/*.js`) and make a pull request.                                  -->\n<!--                                                                        -->\n<!-- If you have any other ideas, open an issue.                            -->\n<!--                                                                        -->\n<!-- Please consider reading the contribution steps (CONTRIBUTING.md).      -->\n<!-- * * * Thanks! * * *                                                    -->\n<!---------------------------------------------------------------------------->\n\n![flat-colors](http://i.imgur.com/S57IeyN.png)\n\n# flat-colors [![Donate now][donate-now]][paypal-donations]\n\nFind the nearest flat color for a RGB/Hex input.\n\n## Installation\n\n```sh\n$ npm i flat-colors\n```\n\n## Example\n\n```js\n// Dependencies\nvar FlatColors = require(\"flat-colors\")\n\n// Get the flat red\nconsole.log(FlatColors(255, 0, 0));\n// => [211, 84, 0]\n\n// Same thing, but using a rgb array\nconsole.log(FlatColors([255, 0, 0]));\n// => [211, 84, 0]\n\n// Still same color but using hex color\nconsole.log(FlatColors(\"#f00\"));\n// => [211, 84, 0]\n\n// Random flat color\nconsole.log(FlatColors());\n// => [?, ?, ?]\n\n```\n\n## Documentation\n\n### `FlatColors(r, g, b)`\nFinds the nearest flat color for rgb and hex inputs.\n\n#### Params\n- **String|Number|Array** `r`: The color as string in hex format, the *red* value or the rgb passed as array. If `undefined`, a random color will be returned.\n- **Number** `g`: The green value.\n- **Number** `b`: The blue value.\n\n#### Return\n- **Array** An array containing the rgb values of the flat color which was found.\n\n### `toRgb(hex)`\nConverts a hex format color into rgb.\n\n#### Params\n- **String** `hex`: The color in the hex format.\n\n#### Return\n- **Array** The rgb array or null.\n\n## How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n## License\n[KINDLY][license] © [Ionică Bizău][website]–The [LICENSE](/LICENSE) file contains\na copy of the license.\n\n[license]: http://ionicabizau.github.io/kindly-license/?author=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica@gmail.com%3E&year=2015\n[contributing]: /CONTRIBUTING.md\n[website]: http://ionicabizau.net\n[docs]: /DOCUMENTATION.md\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MG98D7NPFZ3MG\n[donate-now]: http://i.imgur.com/jioicaN.png",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/IonicaBizau/node-flat-colors.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "3.0.0"
}
