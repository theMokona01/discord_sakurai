{
  "_args": [
    [
      {
        "raw": "remedial@1.x",
        "scope": null,
        "escapedName": "remedial",
        "name": "remedial",
        "rawSpec": "1.x",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/json2yaml"
    ]
  ],
  "_from": "remedial@>=1.0.0 <2.0.0",
  "_id": "remedial@1.0.8",
  "_inCache": true,
  "_location": "/remedial",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/remedial_1.0.8_1525911936213_0.6843081961988711"
  },
  "_npmUser": {
    "name": "coolaj86",
    "email": "coolaj86@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "remedial@1.x",
    "scope": null,
    "escapedName": "remedial",
    "name": "remedial",
    "rawSpec": "1.x",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/json2yaml"
  ],
  "_resolved": "https://registry.npmjs.org/remedial/-/remedial-1.0.8.tgz",
  "_shasum": "a5e4fd52a0e4956adbaf62da63a5a46a78c578a0",
  "_shrinkwrap": null,
  "_spec": "remedial@1.x",
  "_where": "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/json2yaml",
  "author": {
    "name": "AJ ONeal",
    "email": "coolaj86@gmail.com",
    "url": "https://coolaj86.com"
  },
  "contributors": [
    {
      "name": "Douglas Crockford",
      "email": "douglas@crockford.com"
    }
  ],
  "dependencies": {},
  "description": "Deprecated. Utilities for ES3, most of which have been adopted or superseded in ES5.1. Adapted from Douglas Crockford's Remedial JavaScript",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-/62tYiOe6DzS5BqVsNpH/nkGlX45C/Sp6V+NtiN6JQNS1Viay7cWkazmRkrQrdFj2eshDe96SIQNIoMxqhzBOg==",
    "shasum": "a5e4fd52a0e4956adbaf62da63a5a46a78c578a0",
    "tarball": "https://registry.npmjs.org/remedial/-/remedial-1.0.8.tgz",
    "fileCount": 7,
    "unpackedSize": 11668,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa85GBCRA9TVsSAnZWagAAjvcP/2sQiHy3o/2v9ogeCm8Z\ndVTitf9rMe/NT90zc5WWMlGHTBN8JLN7YQ+5WO4uSgGyHRLZ9XorvEtr+Mvg\nVKvtq8S9QsItYqv1rsb4rcs1+4iBYEHsaYN+0Mw3etNy/Ud0LV+433QM8rmK\nNlNnKgjLxwBFNTYo/wgjvXz1xg923sb68jOe3X7FkrFQAvcPgJOswFkg4HZi\nVLilt7UWiJOUhXY4v5c0zP1fB3V+Ppy5W/oUoyE2b66/3y5l6c1JyVguO3UB\nRl4iXn3z4w0yH6pWvyemTl4Wi1y6lwWxEo97GBGsh406ih6b5saeQggs+Q49\nz+GUX2J6BQx/6eTiWagxzyGmUhzH2uLvETt2as9ePHTeP7m3xzQpJBtuYBkW\nLOdxipizgrCOZXiGNvuM7v+MOmx3PPLYf6RYst4b5k5kVRjPn2EXVwgyWC8f\nXM8ghRIHmcM4xzKFGHW08X/xOR569h2LZ9kMFRv2KjgW68QbFhQ2VNvq9rI7\niF5lh/+lgArLg4QX9bQ1X4MJr7N3aQXFSX9i/wi4l71u4ZLRjeIoSG6Uz0Kw\nOskn9i2kHRbwiF8bXPqSXz6uBTzwUd8XZek10RHB7LzaYFIWykwvUjdHtG+k\nLoYIR8k6mvPNbJaTPQZHK30GJJxXaJf0Xoo8HJ6gs1qMYdmel3MytWdxsYH+\n+ffL\r\n=fRgh\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "1456c7d0688a58ca6f64dbe3822f579818b4aab1",
  "homepage": "https://git.coolaj86.com/coolaj86/remedial.js",
  "keywords": [
    "util",
    "isEmpty",
    "typeOf",
    "entityify",
    "quote",
    "supplant",
    "trim"
  ],
  "license": "(MIT OR Apache-2.0)",
  "main": "./index",
  "maintainers": [
    {
      "name": "coolaj86",
      "email": "coolaj86@gmail.com"
    }
  ],
  "name": "remedial",
  "optionalDependencies": {},
  "readme": "Remedial JavaScript\n====\n\nAdaptation of Douglas Crockford's [`remedial.js`](https://web.archive.org/web/20110218164006/http://javascript.crockford.com/remedial.html) with a thin wrap for SSJS\n\nThis works in both the Browser and SSJS.\n\n    npm install remedial\n\n    require('remedial');\n\nNotes\n----\n\n`typeOf` is taken from `jQuery.type`, which is more accurate than Crockford's original and even simpler\nthan the [\"Flanagan / Miller device\"](http://groups.google.com/group/nodejs/msg/0670a986a2906aeb).\n\nThere is [a more specific typeof()](http://rolandog.com/archives/2007/01/18/typeof-a-more-specific-typeof/) implementation also worthy of consideration.\n\nGlobals\n====\n\ntypeOf(o)\n----\n\nSince JavaScript is a loosely-typed language, it is sometimes necessary to examine a value to determine its type. (This is sometimes necessary in strongly typed languages as well.) JavaScript provides a typeof  operator to facilitate this, but typeof has problems.\n\n               typeof               typeOf\n    Object     'object'             'object'\n    Array      'object'             'array'\n    Function   'function'           'function'\n    String     'string'             'string'\n    Number     'number'             'number'\n    Boolean    'boolean'            'boolean'\n    null       'object'             'null'\n    undefined  'undefined'          'undefined'\n\ntypeof [] produces 'object' instead of 'array'. That isn't totally wrong since arrays in JavaScript inherit from objects, but it isn't very useful. typeof null produces 'object'  instead of 'null'. That is totally wrong.\n\nWe can correct this by defining our own typeOf function, which we can use in place of the defective typeof operator.\n\nisEmpty(v)\n----\n\nisEmpty(v) returns true if v is an object containing no enumerable members.\n\nString Methods\n====\n\nJavaScript provides some useful methods for strings, but leaves out some important ones. Fortunately, JavaScript allows us to add new methods to the basic types.\n\nentityify()\n----\n\nentityify() produces a string in which '<', '>', and '&' are replaced with their HTML entity equivalents. This is essential for placing arbitrary strings into HTML texts. So,\n\n    \"if (a < b && b > c) {\".entityify()\n\nproduces\n\n    \"if (a &lt; b &amp;&amp; b &gt; c) {\"\n\nquote()\n----\n\nquote() produces a quoted string. This method returns a string that is like the original string except that it is wrapped in quotes and all quote and backslash characters are preceded with backslash.\n\nsupplant(object)\n----\n\nsupplant() does variable substitution on the string. It scans through the string looking for expressions enclosed in { } braces. If an expression is found, use it as a key on the object, and if the key has a string value or number value, it is substituted for the bracket expression and it repeats. This is useful for automatically fixing URLs. So\n\nparam = {domain: 'valvion.com', media: 'http://media.valvion.com/'};\nurl = \"{media}logo.gif\".supplant(param);\n\nproduces a url containing \"http://media.valvion.com/logo.gif\".\n\ntrim()\n----\n\nThe trim() method removes whitespace characters from the beginning and end of the string.\n",
  "readmeFilename": "README.md",
  "version": "1.0.8"
}
