{
  "_args": [
    [
      {
        "raw": "couleurs@5.0.0",
        "scope": null,
        "escapedName": "couleurs",
        "name": "couleurs",
        "rawSpec": "5.0.0",
        "spec": "5.0.0",
        "type": "version"
      },
      "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/overlap"
    ]
  ],
  "_from": "couleurs@5.0.0",
  "_id": "couleurs@5.0.0",
  "_inCache": true,
  "_location": "/overlap/couleurs",
  "_nodeVersion": "0.12.1",
  "_npmUser": {
    "name": "ionicabizau",
    "email": "bizauionica@gmail.com"
  },
  "_npmVersion": "2.7.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "couleurs@5.0.0",
    "scope": null,
    "escapedName": "couleurs",
    "name": "couleurs",
    "rawSpec": "5.0.0",
    "spec": "5.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/overlap"
  ],
  "_resolved": "https://registry.npmjs.org/couleurs/-/couleurs-5.0.0.tgz",
  "_shasum": "1cd3ace5cca1bec0041578b27464b2676387f6db",
  "_shrinkwrap": null,
  "_spec": "couleurs@5.0.0",
  "_where": "/home/zoltan/src/pnpm/pnpm/packages/pnpm/node_modules/overlap",
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com"
  },
  "blah": {
    "h_img": "http://i.imgur.com/W3rh7oh.png",
    "ex_img": "http://i.imgur.com/M1D9mxT.png"
  },
  "bugs": {
    "url": "https://github.com/IonicaBizau/couleurs/issues"
  },
  "dependencies": {
    "flat-colors": "3.0.0",
    "typpy": "2.0.0",
    "x256": "0.0.2"
  },
  "description": "Add some color and styles to your Node.JS strings.",
  "devDependencies": {
    "mocha": "^2.2.5"
  },
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dist": {
    "shasum": "1cd3ace5cca1bec0041578b27464b2676387f6db",
    "tarball": "https://registry.npmjs.org/couleurs/-/couleurs-5.0.0.tgz"
  },
  "gitHead": "07971e79000df007d02e1bcc4d9ef4a236c2a2c7",
  "homepage": "https://github.com/IonicaBizau/couleurs",
  "keywords": [
    "colors",
    "ascii",
    "256",
    "terminal"
  ],
  "license": "KINDLY",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ionicabizau",
      "email": "bizauionica@yahoo.com"
    }
  ],
  "name": "couleurs",
  "optionalDependencies": {},
  "readme": "<!---------------------------------------------------------------------------->\n<!-- STOP, LOOK & LISTEN!                                                   -->\n<!-- ====================                                                   -->\n<!-- Do NOT edit this file directly since it's generated from a template    -->\n<!-- file, using https://github.com/IonicaBizau/node-blah                   -->\n<!--                                                                        -->\n<!-- If you found a typo in documentation, fix it in the source files       -->\n<!-- (`lib/*.js`) and make a pull request.                                  -->\n<!--                                                                        -->\n<!-- If you have any other ideas, open an issue.                            -->\n<!--                                                                        -->\n<!-- Please consider reading the contribution steps (CONTRIBUTING.md).      -->\n<!-- * * * Thanks! * * *                                                    -->\n<!---------------------------------------------------------------------------->\n\n![couleurs](http://i.imgur.com/W3rh7oh.png)\n\n# couleurs [![Donate now][donate-now]][paypal-donations]\n\nAdd some color and styles to your Node.JS strings.\n\n![couleurs](http://i.imgur.com/M1D9mxT.png)\n\n## Installation\n\n```sh\n$ npm i couleurs\n```\n\n## Example\n\n```js\n// Dependencies\nvar Couleurs = require(\"couleurs\")\n  , FlatColors = require(\"flat-colors\")\n  ;\n\n// Basic usage using a random flat color\nvar colored = new Couleurs(\"Hello World\").fg(FlatColors());\nconsole.log(colored.toString());\n\n// Other ways to color the strings\nconsole.log(Couleurs.fg(\"Red\", [255, 0, 0]));\nconsole.log(Couleurs(\"Red foreground\", [255, 0, 0]));\nconsole.log(Couleurs.fg(\"Yellow\", 255, 255, 0));\nconsole.log(Couleurs.fg(\"Blue\", \"#2980b9\"));\nconsole.log(Couleurs.bg(\"Blue Background\", \"#2980b9\"));\nconsole.log(Couleurs(\"Blue & Underline\").fg(\"#2980b9\").bold().underline().toString());\n\nconsole.log(Couleurs.bold(\"Bold\"));\nconsole.log(Couleurs.italic(\"Italic\"));\n\n// Modify prototype\nCouleurs.proto();\n\nconsole.log(\"Underline\".underline());\nconsole.log(\"Inverse\".inverse());\nconsole.log(\"Strikethrough\".strike());\n\nconsole.log(\"All combined\"\n    .fg(\"#d35400\")\n    .bold()\n    .italic()\n    .underline()\n    .inverse()\n    .strike()\n);\n\n```\n\n## Documentation\n\n### `Couleurs(setStringProto, fg)`\n\n#### Params\n- **Boolean** `setStringProto`: If `true`, the prototype of String class will be modified.\n- **String|Array** `fg`: An optional foreground color.\n\n#### Return\n- **String|Object** The colored string if the `fg` argument was provided or an object containing the following methods:\n\n - `proto`\n - `toString`\n - `fg`\n - `bg`\n - `bold`\n - `italic`\n - `underline`\n - `inverse`\n - `strike`\n\n### `hexToRgb(hex)`\nCouleurs.hexToRgb\nConverts a hex color code to rgb\n\n#### Params\n- **String** `hex`: The hex color value.\n\n#### Return\n- **Array** An array containing `r`, `g`, `b` values. If the input is invalid, `null` will be returned.\n\n### `fg(str, r, g, b)`\nSets the foreground color.\n\nExample:\n\n```js\nconsole.log(Couleurs.fg(\"some text\", \"#e74c3c\"));\nconsole.log(Couleurs(\"some text\").fg(\"#e74c3c\").toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n- **String|Array|Number** `r`: If number, it will be the red value from RGB. If\n  array, it should be an array of three numbers representing RGB values. If\n  String, it will be interpreted as HEX color.\n- **Number** `g`: Green value\n- **Number** `b`: Blue value\n\n### `bg(str, r, g, b)`\nSets the background color.\n\nExample:\n\n```js\nconsole.log(Couleurs.bg(\"some text\", \"#e74c3c\"));\nconsole.log(Couleurs(\"some text\").bg(\"#e74c3c\").toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n- **String|Array|Number** `r`: If number, it will be the red value from RGB. If\n  array, it should be an array of three numbers representing RGB values. If\n  String, it will be interpreted as HEX color.\n- **Number** `g`: Green value\n- **Number** `b`: Blue value\n\n### `strike(str)`\nStrikes the input string.\n\nExample:\n\n```js\nconsole.log(Couleurs.strike(\"some text\"));\nconsole.log(Couleurs(\"some text\").strike().toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n\n### `bold(str)`\nMakes the text bold.\n\nExample:\n\n```js\nconsole.log(Couleurs.bold(\"some text\"));\nconsole.log(Couleurs(\"some text\").bold().toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n\n### `italic(str)`\nMakes the text italic.\n\nExample:\n\n```js\nconsole.log(Couleurs.italic(\"some text\"));\nconsole.log(Couleurs(\"some text\").italic().toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n\n### `underline(str)`\nMakes the text underline.\n\nExample:\n\n```js\nconsole.log(Couleurs.underline(\"some text\"));\nconsole.log(Couleurs(\"some text\").underline().toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n\n### `inverse(str)`\nInverses the input text.\n\nExample:\n\n```js\nconsole.log(Couleurs.inverse(\"some text\"));\nconsole.log(Couleurs(\"some text\").inverse().toString());\n```\n\n#### Params\n- **String** `str`: The input string.\n\n## How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n## License\n[KINDLY][license] © [Ionică Bizău][website]–The [LICENSE](/LICENSE) file contains\na copy of the license.\n\n[license]: http://ionicabizau.github.io/kindly-license/?author=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica@gmail.com%3E&year=2015\n[contributing]: /CONTRIBUTING.md\n[website]: http://ionicabizau.net\n[docs]: /DOCUMENTATION.md\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MG98D7NPFZ3MG\n[donate-now]: http://i.imgur.com/jioicaN.png",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IonicaBizau/couleurs.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "5.0.0"
}
