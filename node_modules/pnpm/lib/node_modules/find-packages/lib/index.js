"use strict";
const read_package_json_1 = require("@pnpm/read-package-json");
const fastGlob = require("fast-glob");
const pFilter = require("p-filter");
const path = require("path");
const DEFAULT_IGNORE = [
    '**/node_modules/**',
    '**/bower_components/**',
    '**/test/**',
    '**/tests/**',
];
async function findPkgs(root, opts) {
    opts = opts || {};
    const globOpts = Object.assign({}, opts, { cwd: root });
    globOpts.ignore = opts.ignore || DEFAULT_IGNORE;
    globOpts.patterns = opts.patterns
        ? normalizePatterns(opts.patterns)
        : ['**/package.json'];
    const paths = await fastGlob(globOpts.patterns, globOpts);
    return pFilter(paths
        .map(path.dirname)
        .map((pkgPath) => path.join(root, pkgPath))
        .map(async (pkgPath) => {
        let manifest;
        try {
            manifest = await read_package_json_1.fromDir(pkgPath);
            return { path: pkgPath, manifest };
        }
        catch (err) {
            if (err.code === 'ENOENT') {
                return null;
            }
            throw err;
        }
    }), Boolean);
}
function normalizePatterns(patterns) {
    return patterns.map((pattern) => pattern.replace(/\/?$/, '/package.json'));
}
// for backward compatibility
findPkgs['default'] = findPkgs; // tslint:disable-line
module.exports = findPkgs;
//# sourceMappingURL=index.js.map